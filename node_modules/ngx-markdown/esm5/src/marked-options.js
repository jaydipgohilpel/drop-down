/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
var MarkedOptions = /** @class */ (function () {
    function MarkedOptions() {
    }
    return MarkedOptions;
}());
export { MarkedOptions };
if (false) {
    /**
     * A prefix URL for any relative link.
     * @type {?}
     */
    MarkedOptions.prototype.baseUrl;
    /**
     * Enable GFM line breaks. This option requires the gfm option to be true.
     * @type {?}
     */
    MarkedOptions.prototype.breaks;
    /**
     * Enable GitHub flavored markdown.
     * @type {?}
     */
    MarkedOptions.prototype.gfm;
    /**
     * Include an id attribute when emitting headings.
     * @type {?}
     */
    MarkedOptions.prototype.headerIds;
    /**
     * Set the prefix for header tag ids.
     * @type {?}
     */
    MarkedOptions.prototype.headerPrefix;
    /**
     * Set the prefix for code block classes.
     * @type {?}
     */
    MarkedOptions.prototype.langPrefix;
    /**
     * Mangle autolinks (<email\@domain.com>).
     * @type {?}
     */
    MarkedOptions.prototype.mangle;
    /**
     * Conform to obscure parts of markdown.pl as much as possible. Don't fix any of the original markdown bugs or poor behavior.
     * @type {?}
     */
    MarkedOptions.prototype.pedantic;
    /**
     * Type: object Default: new Renderer()
     *
     * An object containing functions to render tokens to HTML.
     * @type {?}
     */
    MarkedOptions.prototype.renderer;
    /**
     * Sanitize the output. Ignore any HTML that has been input.
     * @type {?}
     */
    MarkedOptions.prototype.sanitize;
    /**
     * Shows an HTML error message when rendering fails.
     * @type {?}
     */
    MarkedOptions.prototype.silent;
    /**
     * Use smarter list behavior than the original markdown. May eventually be default with the old behavior moved into pedantic.
     * @type {?}
     */
    MarkedOptions.prototype.smartLists;
    /**
     * Use "smart" typograhic punctuation for things like quotes and dashes.
     * @type {?}
     */
    MarkedOptions.prototype.smartypants;
    /**
     * Enable GFM tables. This option requires the gfm option to be true.
     * @type {?}
     */
    MarkedOptions.prototype.tables;
    /**
     * Generate closing slash for self-closing tags (<br/> instead of <br>)
     * @type {?}
     */
    MarkedOptions.prototype.xhtml;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFya2VkLW9wdGlvbnMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtbWFya2Rvd24vIiwic291cmNlcyI6WyJzcmMvbWFya2VkLW9wdGlvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLElBQUE7Ozt3QkFGQTtJQXlGQyxDQUFBO0FBdkZELHlCQXVGQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlbmRlcmVyIH0gZnJvbSAnbWFya2VkJztcclxuXHJcbmV4cG9ydCBjbGFzcyBNYXJrZWRPcHRpb25zIGltcGxlbWVudHMgbWFya2VkLk1hcmtlZE9wdGlvbnMge1xyXG4gIC8qKlxyXG4gICAqIEEgcHJlZml4IFVSTCBmb3IgYW55IHJlbGF0aXZlIGxpbmsuXHJcbiAgICovXHJcbiAgYmFzZVVybD86IHN0cmluZztcclxuXHJcbiAgLyoqXHJcbiAgICogRW5hYmxlIEdGTSBsaW5lIGJyZWFrcy4gVGhpcyBvcHRpb24gcmVxdWlyZXMgdGhlIGdmbSBvcHRpb24gdG8gYmUgdHJ1ZS5cclxuICAgKi9cclxuICBicmVha3M/OiBib29sZWFuO1xyXG5cclxuICAvKipcclxuICAgKiBFbmFibGUgR2l0SHViIGZsYXZvcmVkIG1hcmtkb3duLlxyXG4gICAqL1xyXG4gIGdmbT86IGJvb2xlYW47XHJcblxyXG4gIC8qKlxyXG4gICAqIEluY2x1ZGUgYW4gaWQgYXR0cmlidXRlIHdoZW4gZW1pdHRpbmcgaGVhZGluZ3MuXHJcbiAgICovXHJcbiAgaGVhZGVySWRzPzogYm9vbGVhbjtcclxuXHJcbiAgLyoqXHJcbiAgICogU2V0IHRoZSBwcmVmaXggZm9yIGhlYWRlciB0YWcgaWRzLlxyXG4gICAqL1xyXG4gIGhlYWRlclByZWZpeD86IHN0cmluZztcclxuXHJcbiAgLyoqXHJcbiAgICogU2V0IHRoZSBwcmVmaXggZm9yIGNvZGUgYmxvY2sgY2xhc3Nlcy5cclxuICAgKi9cclxuICBsYW5nUHJlZml4Pzogc3RyaW5nO1xyXG5cclxuICAvKipcclxuICAgKiBNYW5nbGUgYXV0b2xpbmtzICg8ZW1haWxAZG9tYWluLmNvbT4pLlxyXG4gICAqL1xyXG4gIG1hbmdsZT86IGJvb2xlYW47XHJcblxyXG4gIC8qKlxyXG4gICAqIENvbmZvcm0gdG8gb2JzY3VyZSBwYXJ0cyBvZiBtYXJrZG93bi5wbCBhcyBtdWNoIGFzIHBvc3NpYmxlLiBEb24ndCBmaXggYW55IG9mIHRoZSBvcmlnaW5hbCBtYXJrZG93biBidWdzIG9yIHBvb3IgYmVoYXZpb3IuXHJcbiAgICovXHJcbiAgcGVkYW50aWM/OiBib29sZWFuO1xyXG5cclxuICAvKipcclxuICAgKiBUeXBlOiBvYmplY3QgRGVmYXVsdDogbmV3IFJlbmRlcmVyKClcclxuICAgKlxyXG4gICAqIEFuIG9iamVjdCBjb250YWluaW5nIGZ1bmN0aW9ucyB0byByZW5kZXIgdG9rZW5zIHRvIEhUTUwuXHJcbiAgICovXHJcbiAgcmVuZGVyZXI/OiBSZW5kZXJlcjtcclxuXHJcbiAgLyoqXHJcbiAgICogU2FuaXRpemUgdGhlIG91dHB1dC4gSWdub3JlIGFueSBIVE1MIHRoYXQgaGFzIGJlZW4gaW5wdXQuXHJcbiAgICovXHJcbiAgc2FuaXRpemU/OiBib29sZWFuO1xyXG5cclxuICAvKipcclxuICAgKiBTaG93cyBhbiBIVE1MIGVycm9yIG1lc3NhZ2Ugd2hlbiByZW5kZXJpbmcgZmFpbHMuXHJcbiAgICovXHJcbiAgc2lsZW50PzogYm9vbGVhbjtcclxuXHJcbiAgLyoqXHJcbiAgICogVXNlIHNtYXJ0ZXIgbGlzdCBiZWhhdmlvciB0aGFuIHRoZSBvcmlnaW5hbCBtYXJrZG93bi4gTWF5IGV2ZW50dWFsbHkgYmUgZGVmYXVsdCB3aXRoIHRoZSBvbGQgYmVoYXZpb3IgbW92ZWQgaW50byBwZWRhbnRpYy5cclxuICAgKi9cclxuICBzbWFydExpc3RzPzogYm9vbGVhbjtcclxuXHJcbiAgLyoqXHJcbiAgICogVXNlIFwic21hcnRcIiB0eXBvZ3JhaGljIHB1bmN0dWF0aW9uIGZvciB0aGluZ3MgbGlrZSBxdW90ZXMgYW5kIGRhc2hlcy5cclxuICAgKi9cclxuICBzbWFydHlwYW50cz86IGJvb2xlYW47XHJcblxyXG4gIC8qKlxyXG4gICAqIEVuYWJsZSBHRk0gdGFibGVzLiBUaGlzIG9wdGlvbiByZXF1aXJlcyB0aGUgZ2ZtIG9wdGlvbiB0byBiZSB0cnVlLlxyXG4gICAqL1xyXG4gIHRhYmxlcz86IGJvb2xlYW47XHJcblxyXG4gIC8qKlxyXG4gICAqIEdlbmVyYXRlIGNsb3Npbmcgc2xhc2ggZm9yIHNlbGYtY2xvc2luZyB0YWdzICg8YnIvPiBpbnN0ZWFkIG9mIDxicj4pXHJcbiAgICovXHJcbiAgeGh0bWw/OiBib29sZWFuO1xyXG5cclxuICAvKipcclxuICAgKiBBIGZ1bmN0aW9uIHRvIGhpZ2hsaWdodCBjb2RlIGJsb2Nrcy4gVGhlIGZ1bmN0aW9uIHRha2VzIHRocmVlIGFyZ3VtZW50czogY29kZSwgbGFuZywgYW5kIGNhbGxiYWNrLlxyXG4gICAqL1xyXG4gIGhpZ2hsaWdodD8oY29kZTogc3RyaW5nLCBsYW5nOiBzdHJpbmcsIGNhbGxiYWNrPzogKGVycm9yOiBhbnkgfCB1bmRlZmluZWQsIGNvZGU6IHN0cmluZykgPT4gdm9pZCk6IHN0cmluZztcclxuXHJcbiAgLyoqXHJcbiAgICogT3B0aW9uYWxseSBzYW5pdGl6ZSBmb3VuZCBIVE1MIHdpdGggYSBzYW5pdGl6ZXIgZnVuY3Rpb24uXHJcbiAgICovXHJcbiAgc2FuaXRpemVyPyhodG1sOiBzdHJpbmcpOiBzdHJpbmc7XHJcbn1cclxuIl19