{"version":3,"sources":["ng://ngx-markdown/src/language.pipe.ts","null","ng://ngx-markdown/src/marked-options.ts","ng://ngx-markdown/src/marked-renderer.ts","ng://ngx-markdown/src/markdown.service.ts","ng://ngx-markdown/src/prism-plugin.ts","ng://ngx-markdown/src/markdown.component.ts","ng://ngx-markdown/src/markdown.pipe.ts","ng://ngx-markdown/src/markdown.module.ts"],"names":["LanguagePipe","prototype","transform","value","language","console","error","Pipe","args","name","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","__spread","arguments","length","concat","MarkedOptions","MarkedRenderer","_super","__extends","__","this","constructor","create","tslib_1.__extends","Renderer","errorSrcWithoutHttpClient","MarkdownService","platform","http","domSanitizer","options","defineProperty","_options","assign","renderer","compile","markdown","decodeHtml","markedOptions","precompiled","precompile","compiled","parse","sanitize","sanitizer","SecurityContext","HTML","getSource","src","_this","Error","get","responseType","pipe","map","handleExtension","highlight","element","isPlatformBrowser","Prism","document","querySelectorAll","forEach","x","classList","add","highlightAllUnder","html","textarea","createElement","innerHTML","extension","split","splice","join","line","lineIdentStart","indentStart","isNaN","search","Math","min","substring","Injectable","decorators","type","Inject","PLATFORM_ID","HttpClient","Optional","DomSanitizer","LineHighlight","LineNumbers","MarkdownComponent","markdownService","EventEmitter","load","_lineNumbers","coerceBooleanProperty","_lineHighlight","ngOnChanges","data","handleData","handleSrc","ngAfterViewInit","handleTransclusion","render","nativeElement","handlePlugins","subscribe","emit","lineHighlight","setPluginClass","PrismPlugin","setPluginOptions","dataLine","dataLineOffset","lineOffset","lineNumbers","dataStart","start","plugin","preElements","classes","_a","item","apply","keys","option","attributeValue","attributeName","toLispCase","setAttribute","toString","upperChars","match","str","replace","RegExp","toLowerCase","slice","Component","selector","template","ElementRef","Input","Output","MarkdownPipe","elementRef","zone","onStable","first","NgZone","initialMarkedOptions","provide","useValue","gfm","tables","breaks","pedantic","smartLists","smartypants","sharedDeclarations","MarkdownModule","forRoot","markdownModuleConfig","ngModule","providers","loader","forChild","NgModule","exports","declarations"],"mappings":"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","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'language',\r\n})\r\nexport class LanguagePipe implements PipeTransform {\r\n\r\n  transform(value: string, language: string): string {\r\n    if (typeof value !== 'string') {\r\n      console.error(`LanguagePipe has been invoked with an invalid value type [${value}]`);\r\n      return value;\r\n    }\r\n    if (typeof language !== 'string') {\r\n      console.error(`LanguagePipe has been invoked with an invalid parameter [${language}]`);\r\n      return value;\r\n    }\r\n    return '```' + language + '\\n' +  value + '\\n```';\r\n  }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Renderer } from 'marked';\r\n\r\nexport class MarkedOptions implements marked.MarkedOptions {\r\n  /**\r\n   * A prefix URL for any relative link.\r\n   */\r\n  baseUrl?: string;\r\n\r\n  /**\r\n   * Enable GFM line breaks. This option requires the gfm option to be true.\r\n   */\r\n  breaks?: boolean;\r\n\r\n  /**\r\n   * Enable GitHub flavored markdown.\r\n   */\r\n  gfm?: boolean;\r\n\r\n  /**\r\n   * Include an id attribute when emitting headings.\r\n   */\r\n  headerIds?: boolean;\r\n\r\n  /**\r\n   * Set the prefix for header tag ids.\r\n   */\r\n  headerPrefix?: string;\r\n\r\n  /**\r\n   * Set the prefix for code block classes.\r\n   */\r\n  langPrefix?: string;\r\n\r\n  /**\r\n   * Mangle autolinks (<email@domain.com>).\r\n   */\r\n  mangle?: boolean;\r\n\r\n  /**\r\n   * Conform to obscure parts of markdown.pl as much as possible. Don't fix any of the original markdown bugs or poor behavior.\r\n   */\r\n  pedantic?: boolean;\r\n\r\n  /**\r\n   * Type: object Default: new Renderer()\r\n   *\r\n   * An object containing functions to render tokens to HTML.\r\n   */\r\n  renderer?: Renderer;\r\n\r\n  /**\r\n   * Sanitize the output. Ignore any HTML that has been input.\r\n   */\r\n  sanitize?: boolean;\r\n\r\n  /**\r\n   * Shows an HTML error message when rendering fails.\r\n   */\r\n  silent?: boolean;\r\n\r\n  /**\r\n   * Use smarter list behavior than the original markdown. May eventually be default with the old behavior moved into pedantic.\r\n   */\r\n  smartLists?: boolean;\r\n\r\n  /**\r\n   * Use \"smart\" typograhic punctuation for things like quotes and dashes.\r\n   */\r\n  smartypants?: boolean;\r\n\r\n  /**\r\n   * Enable GFM tables. This option requires the gfm option to be true.\r\n   */\r\n  tables?: boolean;\r\n\r\n  /**\r\n   * Generate closing slash for self-closing tags (<br/> instead of <br>)\r\n   */\r\n  xhtml?: boolean;\r\n\r\n  /**\r\n   * A function to highlight code blocks. The function takes three arguments: code, lang, and callback.\r\n   */\r\n  highlight?(code: string, lang: string, callback?: (error: any | undefined, code: string) => void): string;\r\n\r\n  /**\r\n   * Optionally sanitize found HTML with a sanitizer function.\r\n   */\r\n  sanitizer?(html: string): string;\r\n}\r\n","import { Renderer } from 'marked';\r\n\r\nexport class MarkedRenderer extends Renderer { }\r\n","import { isPlatformBrowser } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable, Optional, PLATFORM_ID, SecurityContext } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { parse } from 'marked';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { MarkedOptions } from './marked-options';\r\nimport { MarkedRenderer } from './marked-renderer';\r\n\r\ndeclare var Prism: {\r\n  highlightAllUnder: (element: Element | Document) => void;\r\n};\r\n\r\n// tslint:disable-next-line:max-line-length\r\nexport const errorSrcWithoutHttpClient = '[ngx-markdown] When using the [src] attribute you *have to* pass the `HttpClient` as a parameter of the `forRoot` method. See README for more information';\r\n\r\n@Injectable()\r\nexport class MarkdownService {\r\n  private _options: MarkedOptions;\r\n\r\n  get options(): MarkedOptions { return this._options; }\r\n  set options(value: MarkedOptions) {\r\n    this._options = Object.assign({},\r\n      { renderer: new MarkedRenderer() },\r\n      this._options,\r\n      value,\r\n    );\r\n  }\r\n\r\n  get renderer(): MarkedRenderer { return this.options.renderer; }\r\n  set renderer(value: MarkedRenderer) {\r\n    this.options.renderer = value;\r\n  }\r\n\r\n  constructor(\r\n    @Inject(PLATFORM_ID) private platform: Object,\r\n    @Optional() private http: HttpClient,\r\n    private domSanitizer: DomSanitizer,\r\n    options: MarkedOptions,\r\n  ) {\r\n    this.options = options;\r\n  }\r\n\r\n  compile(markdown: string, decodeHtml = false, markedOptions = this.options): string {\r\n    const precompiled = this.precompile(markdown);\r\n    const compiled = parse(\r\n      decodeHtml ? this.decodeHtml(precompiled) : precompiled,\r\n      markedOptions);\r\n    return markedOptions.sanitize && !markedOptions.sanitizer\r\n      ? this.domSanitizer.sanitize(SecurityContext.HTML, compiled)\r\n      : compiled;\r\n  }\r\n\r\n  getSource(src: string): Observable<string> {\r\n    if (!this.http) {\r\n      throw new Error(errorSrcWithoutHttpClient);\r\n    }\r\n    return this.http\r\n      .get(src, { responseType: 'text' })\r\n      .pipe(map(markdown => this.handleExtension(src, markdown)));\r\n  }\r\n\r\n  highlight(element?: Element | Document) {\r\n    if (isPlatformBrowser(this.platform) && typeof Prism !== 'undefined') {\r\n      if (!element) {\r\n        element = document;\r\n      }\r\n      element\r\n        .querySelectorAll('pre code:not([class*=\"language-\"])')\r\n        .forEach(x => x.classList.add('language-none'));\r\n      Prism.highlightAllUnder(element);\r\n    }\r\n  }\r\n\r\n  private decodeHtml(html: string) {\r\n    if (isPlatformBrowser(this.platform)) {\r\n      const textarea = document.createElement('textarea');\r\n      textarea.innerHTML = html;\r\n      return textarea.value;\r\n    }\r\n    return html;\r\n  }\r\n\r\n  private handleExtension(src: string, markdown: string): string {\r\n    const extension = src\r\n      ? src.split('?')[0].split('.').splice(-1).join()\r\n      : null;\r\n    return extension !== 'md'\r\n      ? '```' + extension + '\\n' + markdown + '\\n```'\r\n      : markdown;\r\n  }\r\n\r\n  private precompile(markdown: string): string {\r\n    if (!markdown) {\r\n      return '';\r\n    }\r\n    let indentStart: number;\r\n    return markdown\r\n      .split('\\n')\r\n      .map(line => {\r\n        // set current line ident start to base reference indentation\r\n        let lineIdentStart = indentStart;\r\n        // find position of 1st non-whitespace character\r\n        // to determine the current line indentation start\r\n        if (line.length > 0) {\r\n          lineIdentStart = isNaN(lineIdentStart)\r\n            ? line.search(/\\S|$/)\r\n            : Math.min(line.search(/\\S|$/), lineIdentStart);\r\n        }\r\n        // keep 1st non-whitespace line indentation\r\n        // as base reference for other lines\r\n        if (isNaN(indentStart)) {\r\n          indentStart = lineIdentStart;\r\n        }\r\n        // remove whitespaces before current line indentation\r\n        return !!lineIdentStart\r\n          ? line.substring(lineIdentStart)\r\n          : line;\r\n      }).join('\\n');\r\n  }\r\n}\r\n","export enum PrismPlugin {\r\n  LineHighlight = 'line-highlight',\r\n  LineNumbers = 'line-numbers',\r\n}\r\n","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, OnChanges, Output } from '@angular/core';\r\n\r\nimport { MarkdownService } from './markdown.service';\r\nimport { PrismPlugin } from './prism-plugin';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'markdown, [markdown]',\r\n  template: '<ng-content></ng-content>',\r\n})\r\nexport class MarkdownComponent implements OnChanges, AfterViewInit {\r\n  @Input() data: string;\r\n  @Input() src: string;\r\n\r\n  // Plugin - lineNumbers\r\n  @Input()\r\n  get lineNumbers(): boolean { return this._lineNumbers; }\r\n  set lineNumbers(value: boolean) { this._lineNumbers = this.coerceBooleanProperty(value); }\r\n  @Input() start: number;\r\n\r\n  // Plugin - lineHighlight\r\n  @Input()\r\n  get lineHighlight(): boolean { return this._lineHighlight; }\r\n  set lineHighlight(value: boolean) { this._lineHighlight = this.coerceBooleanProperty(value); }\r\n  @Input() line: string | string[];\r\n  @Input() lineOffset: number;\r\n\r\n  @Output() error = new EventEmitter<string>();\r\n  @Output() load = new EventEmitter<string>();\r\n\r\n  private _lineHighlight = false;\r\n  private _lineNumbers = false;\r\n\r\n  constructor(\r\n    public element: ElementRef<HTMLElement>,\r\n    public markdownService: MarkdownService,\r\n  ) { }\r\n\r\n  ngOnChanges() {\r\n    if (this.data) {\r\n      this.handleData();\r\n      return;\r\n    }\r\n    if (this.src) {\r\n      this.handleSrc();\r\n      return;\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (!this.data && !this.src) {\r\n      this.handleTransclusion();\r\n    }\r\n  }\r\n\r\n  render(markdown: string, decodeHtml = false) {\r\n    this.element.nativeElement.innerHTML = this.markdownService.compile(markdown, decodeHtml);\r\n    this.handlePlugins();\r\n    this.markdownService.highlight(this.element.nativeElement);\r\n  }\r\n\r\n  private coerceBooleanProperty(value: boolean): boolean {\r\n    return value != null && `${value}` !== 'false';\r\n  }\r\n\r\n  private handleData() {\r\n    this.render(this.data);\r\n  }\r\n\r\n  private handleSrc() {\r\n    this.markdownService\r\n      .getSource(this.src)\r\n      .subscribe(\r\n        markdown => {\r\n          this.render(markdown);\r\n          this.load.emit(markdown);\r\n        },\r\n        error => this.error.emit(error),\r\n      );\r\n  }\r\n\r\n  private handleTransclusion() {\r\n    this.render(this.element.nativeElement.innerHTML, true);\r\n  }\r\n\r\n  private handlePlugins() {\r\n    if (this.lineHighlight) {\r\n      this.setPluginClass(this.element.nativeElement, PrismPlugin.LineHighlight);\r\n      this.setPluginOptions(this.element.nativeElement, { dataLine: this.line, dataLineOffset: this.lineOffset });\r\n    }\r\n    if (this.lineNumbers) {\r\n      this.setPluginClass(this.element.nativeElement, PrismPlugin.LineNumbers);\r\n      this.setPluginOptions(this.element.nativeElement, { dataStart: this.start });\r\n    }\r\n  }\r\n\r\n  private setPluginClass(element: HTMLElement, plugin: string | string[]) {\r\n    const preElements = element.querySelectorAll('pre');\r\n    for (let i = 0; i < preElements.length; i++) {\r\n      const classes = plugin instanceof Array ? plugin : [plugin];\r\n      preElements.item(i).classList.add(...classes);\r\n    }\r\n  }\r\n\r\n  private setPluginOptions(element: HTMLElement, options: object) {\r\n    const preElements = element.querySelectorAll('pre');\r\n    for (let i = 0; i < preElements.length; i++) {\r\n      Object.keys(options).forEach(option => {\r\n        const attributeValue = options[option];\r\n        if (!!attributeValue) {\r\n          const attributeName = this.toLispCase(option);\r\n          preElements.item(i).setAttribute(attributeName, attributeValue.toString());\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private toLispCase(value: string) {\r\n    const upperChars = value.match(/([A-Z])/g);\r\n    if (!upperChars) {\r\n      return value;\r\n    }\r\n    let str = value.toString();\r\n    for (let i = 0, n = upperChars.length; i < n; i++) {\r\n      str = str.replace(new RegExp(upperChars[i]), '-' + upperChars[i].toLowerCase());\r\n    }\r\n    if (str.slice(0, 1) === '-') {\r\n      str = str.slice(1);\r\n    }\r\n    return str;\r\n  }\r\n}\r\n","import { ElementRef, NgZone, Pipe, PipeTransform } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { MarkdownService } from './markdown.service';\r\n\r\n@Pipe({\r\n  name: 'markdown',\r\n})\r\nexport class MarkdownPipe implements PipeTransform {\r\n\r\n  constructor(\r\n    private elementRef: ElementRef<HTMLElement>,\r\n    private markdownService: MarkdownService,\r\n    private zone: NgZone,\r\n  ) { }\r\n\r\n  transform(value: string): string {\r\n    if (value == null) {\r\n      return '';\r\n    }\r\n\r\n    if (typeof value !== 'string') {\r\n      console.error(`MarkdownPipe has been invoked with an invalid value type [${value}]`);\r\n      return value;\r\n    }\r\n\r\n    const markdown = this.markdownService.compile(value);\r\n\r\n    this.zone.onStable\r\n      .pipe(first())\r\n      .subscribe(() => this.markdownService.highlight(this.elementRef.nativeElement));\r\n\r\n    return markdown;\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\r\n\r\nimport { LanguagePipe } from './language.pipe';\r\nimport { MarkdownComponent } from './markdown.component';\r\nimport { MarkdownPipe } from './markdown.pipe';\r\nimport { MarkdownService } from './markdown.service';\r\nimport { MarkedOptions } from './marked-options';\r\n\r\n// having a dependency on `HttpClientModule` within a library\r\n// breaks all the interceptors from the app consuming the library\r\n// here, we explicitely ask the user to pass a provider with\r\n// their own instance of `HttpClientModule`\r\nexport interface MarkdownModuleConfig {\r\n  loader?: Provider;\r\n  markedOptions?: Provider;\r\n}\r\n\r\nexport const initialMarkedOptions: Provider = {\r\n  provide: MarkedOptions,\r\n  useValue: {\r\n    gfm: true,\r\n    tables: true,\r\n    breaks: false,\r\n    pedantic: false,\r\n    sanitize: false,\r\n    smartLists: true,\r\n    smartypants: false,\r\n  },\r\n};\r\n\r\nconst sharedDeclarations = [\r\n  LanguagePipe,\r\n  MarkdownComponent,\r\n  MarkdownPipe,\r\n];\r\n\r\n@NgModule({\r\n  exports: [\r\n    ...sharedDeclarations,\r\n  ],\r\n  declarations: [\r\n    ...sharedDeclarations,\r\n  ],\r\n})\r\nexport class MarkdownModule {\r\n  static forRoot(markdownModuleConfig?: MarkdownModuleConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: MarkdownModule,\r\n      providers: [\r\n        MarkdownService,\r\n        ...(markdownModuleConfig\r\n          ? [\r\n              markdownModuleConfig.loader || [],\r\n              markdownModuleConfig.markedOptions || initialMarkedOptions,\r\n            ]\r\n          : [initialMarkedOptions]),\r\n      ],\r\n    };\r\n  }\r\n\r\n  static forChild(): ModuleWithProviders {\r\n    return {\r\n      ngModule: MarkdownModule,\r\n    };\r\n  }\r\n}\r\n"]}